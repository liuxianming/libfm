// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: libfm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "libfm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace libFM {

namespace {

const ::google::protobuf::Descriptor* Proto_fm_model_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_fm_model_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_libfm_2eproto() {
  protobuf_AddDesc_libfm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "libfm.proto");
  GOOGLE_CHECK(file != NULL);
  Proto_fm_model_descriptor_ = file->message_type(0);
  static const int Proto_fm_model_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, num_attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, num_factors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, k0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, k1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, w0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, w_str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, v_str_),
  };
  Proto_fm_model_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_fm_model_descriptor_,
      Proto_fm_model::default_instance_,
      Proto_fm_model_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, _has_bits_[0]),
      -1,
      -1,
      sizeof(Proto_fm_model),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_libfm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_fm_model_descriptor_, &Proto_fm_model::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_libfm_2eproto() {
  delete Proto_fm_model::default_instance_;
  delete Proto_fm_model_reflection_;
}

void protobuf_AddDesc_libfm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013libfm.proto\022\005libFM\"\216\001\n\016Proto_fm_model\022"
    "\026\n\016num_attributes\030\001 \002(\r\022\023\n\013num_factors\030\002"
    " \002(\005\022\020\n\002k0\030\003 \002(\010:\004true\022\020\n\002k1\030\004 \002(\010:\004true"
    "\022\r\n\002w0\030\005 \002(\001:\0010\022\r\n\005w_str\030\006 \002(\t\022\r\n\005v_str\030"
    "\007 \002(\t", 165);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "libfm.proto", &protobuf_RegisterTypes);
  Proto_fm_model::default_instance_ = new Proto_fm_model();
  Proto_fm_model::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_libfm_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_libfm_2eproto {
  StaticDescriptorInitializer_libfm_2eproto() {
    protobuf_AddDesc_libfm_2eproto();
  }
} static_descriptor_initializer_libfm_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Proto_fm_model::kNumAttributesFieldNumber;
const int Proto_fm_model::kNumFactorsFieldNumber;
const int Proto_fm_model::kK0FieldNumber;
const int Proto_fm_model::kK1FieldNumber;
const int Proto_fm_model::kW0FieldNumber;
const int Proto_fm_model::kWStrFieldNumber;
const int Proto_fm_model::kVStrFieldNumber;
#endif  // !_MSC_VER

Proto_fm_model::Proto_fm_model()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:libFM.Proto_fm_model)
}

void Proto_fm_model::InitAsDefaultInstance() {
}

Proto_fm_model::Proto_fm_model(const Proto_fm_model& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:libFM.Proto_fm_model)
}

void Proto_fm_model::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  num_attributes_ = 0u;
  num_factors_ = 0;
  k0_ = true;
  k1_ = true;
  w0_ = 0;
  w_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_fm_model::~Proto_fm_model() {
  // @@protoc_insertion_point(destructor:libFM.Proto_fm_model)
  SharedDtor();
}

void Proto_fm_model::SharedDtor() {
  w_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Proto_fm_model::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_fm_model::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_fm_model_descriptor_;
}

const Proto_fm_model& Proto_fm_model::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libfm_2eproto();
  return *default_instance_;
}

Proto_fm_model* Proto_fm_model::default_instance_ = NULL;

Proto_fm_model* Proto_fm_model::New(::google::protobuf::Arena* arena) const {
  Proto_fm_model* n = new Proto_fm_model;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_fm_model::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Proto_fm_model*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(num_attributes_, w0_);
    k0_ = true;
    k1_ = true;
    if (has_w_str()) {
      w_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_v_str()) {
      v_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Proto_fm_model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:libFM.Proto_fm_model)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 num_attributes = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_attributes_)));
          set_has_num_attributes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num_factors;
        break;
      }

      // required int32 num_factors = 2;
      case 2: {
        if (tag == 16) {
         parse_num_factors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_factors_)));
          set_has_num_factors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_k0;
        break;
      }

      // required bool k0 = 3 [default = true];
      case 3: {
        if (tag == 24) {
         parse_k0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &k0_)));
          set_has_k0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_k1;
        break;
      }

      // required bool k1 = 4 [default = true];
      case 4: {
        if (tag == 32) {
         parse_k1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &k1_)));
          set_has_k1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_w0;
        break;
      }

      // required double w0 = 5 [default = 0];
      case 5: {
        if (tag == 41) {
         parse_w0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w0_)));
          set_has_w0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_w_str;
        break;
      }

      // required string w_str = 6;
      case 6: {
        if (tag == 50) {
         parse_w_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_w_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->w_str().data(), this->w_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "libFM.Proto_fm_model.w_str");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_v_str;
        break;
      }

      // required string v_str = 7;
      case 7: {
        if (tag == 58) {
         parse_v_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_v_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->v_str().data(), this->v_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "libFM.Proto_fm_model.v_str");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:libFM.Proto_fm_model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:libFM.Proto_fm_model)
  return false;
#undef DO_
}

void Proto_fm_model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:libFM.Proto_fm_model)
  // required uint32 num_attributes = 1;
  if (has_num_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num_attributes(), output);
  }

  // required int32 num_factors = 2;
  if (has_num_factors()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_factors(), output);
  }

  // required bool k0 = 3 [default = true];
  if (has_k0()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->k0(), output);
  }

  // required bool k1 = 4 [default = true];
  if (has_k1()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->k1(), output);
  }

  // required double w0 = 5 [default = 0];
  if (has_w0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->w0(), output);
  }

  // required string w_str = 6;
  if (has_w_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->w_str().data(), this->w_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "libFM.Proto_fm_model.w_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->w_str(), output);
  }

  // required string v_str = 7;
  if (has_v_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->v_str().data(), this->v_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "libFM.Proto_fm_model.v_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->v_str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:libFM.Proto_fm_model)
}

::google::protobuf::uint8* Proto_fm_model::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:libFM.Proto_fm_model)
  // required uint32 num_attributes = 1;
  if (has_num_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num_attributes(), target);
  }

  // required int32 num_factors = 2;
  if (has_num_factors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_factors(), target);
  }

  // required bool k0 = 3 [default = true];
  if (has_k0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->k0(), target);
  }

  // required bool k1 = 4 [default = true];
  if (has_k1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->k1(), target);
  }

  // required double w0 = 5 [default = 0];
  if (has_w0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->w0(), target);
  }

  // required string w_str = 6;
  if (has_w_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->w_str().data(), this->w_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "libFM.Proto_fm_model.w_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->w_str(), target);
  }

  // required string v_str = 7;
  if (has_v_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->v_str().data(), this->v_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "libFM.Proto_fm_model.v_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->v_str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:libFM.Proto_fm_model)
  return target;
}

int Proto_fm_model::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_num_attributes()) {
    // required uint32 num_attributes = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_attributes());
  }

  if (has_num_factors()) {
    // required int32 num_factors = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_factors());
  }

  if (has_k0()) {
    // required bool k0 = 3 [default = true];
    total_size += 1 + 1;
  }

  if (has_k1()) {
    // required bool k1 = 4 [default = true];
    total_size += 1 + 1;
  }

  if (has_w0()) {
    // required double w0 = 5 [default = 0];
    total_size += 1 + 8;
  }

  if (has_w_str()) {
    // required string w_str = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->w_str());
  }

  if (has_v_str()) {
    // required string v_str = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->v_str());
  }

  return total_size;
}
int Proto_fm_model::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required uint32 num_attributes = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_attributes());

    // required int32 num_factors = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_factors());

    // required bool k0 = 3 [default = true];
    total_size += 1 + 1;

    // required bool k1 = 4 [default = true];
    total_size += 1 + 1;

    // required double w0 = 5 [default = 0];
    total_size += 1 + 8;

    // required string w_str = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->w_str());

    // required string v_str = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->v_str());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_fm_model::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Proto_fm_model* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_fm_model*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_fm_model::MergeFrom(const Proto_fm_model& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num_attributes()) {
      set_num_attributes(from.num_attributes());
    }
    if (from.has_num_factors()) {
      set_num_factors(from.num_factors());
    }
    if (from.has_k0()) {
      set_k0(from.k0());
    }
    if (from.has_k1()) {
      set_k1(from.k1());
    }
    if (from.has_w0()) {
      set_w0(from.w0());
    }
    if (from.has_w_str()) {
      set_has_w_str();
      w_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.w_str_);
    }
    if (from.has_v_str()) {
      set_has_v_str();
      v_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.v_str_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Proto_fm_model::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_fm_model::CopyFrom(const Proto_fm_model& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_fm_model::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void Proto_fm_model::Swap(Proto_fm_model* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_fm_model::InternalSwap(Proto_fm_model* other) {
  std::swap(num_attributes_, other->num_attributes_);
  std::swap(num_factors_, other->num_factors_);
  std::swap(k0_, other->k0_);
  std::swap(k1_, other->k1_);
  std::swap(w0_, other->w0_);
  w_str_.Swap(&other->w_str_);
  v_str_.Swap(&other->v_str_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_fm_model::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_fm_model_descriptor_;
  metadata.reflection = Proto_fm_model_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_fm_model

// required uint32 num_attributes = 1;
 bool Proto_fm_model::has_num_attributes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void Proto_fm_model::set_has_num_attributes() {
  _has_bits_[0] |= 0x00000001u;
}
 void Proto_fm_model::clear_has_num_attributes() {
  _has_bits_[0] &= ~0x00000001u;
}
 void Proto_fm_model::clear_num_attributes() {
  num_attributes_ = 0u;
  clear_has_num_attributes();
}
 ::google::protobuf::uint32 Proto_fm_model::num_attributes() const {
  // @@protoc_insertion_point(field_get:libFM.Proto_fm_model.num_attributes)
  return num_attributes_;
}
 void Proto_fm_model::set_num_attributes(::google::protobuf::uint32 value) {
  set_has_num_attributes();
  num_attributes_ = value;
  // @@protoc_insertion_point(field_set:libFM.Proto_fm_model.num_attributes)
}

// required int32 num_factors = 2;
 bool Proto_fm_model::has_num_factors() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void Proto_fm_model::set_has_num_factors() {
  _has_bits_[0] |= 0x00000002u;
}
 void Proto_fm_model::clear_has_num_factors() {
  _has_bits_[0] &= ~0x00000002u;
}
 void Proto_fm_model::clear_num_factors() {
  num_factors_ = 0;
  clear_has_num_factors();
}
 ::google::protobuf::int32 Proto_fm_model::num_factors() const {
  // @@protoc_insertion_point(field_get:libFM.Proto_fm_model.num_factors)
  return num_factors_;
}
 void Proto_fm_model::set_num_factors(::google::protobuf::int32 value) {
  set_has_num_factors();
  num_factors_ = value;
  // @@protoc_insertion_point(field_set:libFM.Proto_fm_model.num_factors)
}

// required bool k0 = 3 [default = true];
 bool Proto_fm_model::has_k0() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void Proto_fm_model::set_has_k0() {
  _has_bits_[0] |= 0x00000004u;
}
 void Proto_fm_model::clear_has_k0() {
  _has_bits_[0] &= ~0x00000004u;
}
 void Proto_fm_model::clear_k0() {
  k0_ = true;
  clear_has_k0();
}
 bool Proto_fm_model::k0() const {
  // @@protoc_insertion_point(field_get:libFM.Proto_fm_model.k0)
  return k0_;
}
 void Proto_fm_model::set_k0(bool value) {
  set_has_k0();
  k0_ = value;
  // @@protoc_insertion_point(field_set:libFM.Proto_fm_model.k0)
}

// required bool k1 = 4 [default = true];
 bool Proto_fm_model::has_k1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void Proto_fm_model::set_has_k1() {
  _has_bits_[0] |= 0x00000008u;
}
 void Proto_fm_model::clear_has_k1() {
  _has_bits_[0] &= ~0x00000008u;
}
 void Proto_fm_model::clear_k1() {
  k1_ = true;
  clear_has_k1();
}
 bool Proto_fm_model::k1() const {
  // @@protoc_insertion_point(field_get:libFM.Proto_fm_model.k1)
  return k1_;
}
 void Proto_fm_model::set_k1(bool value) {
  set_has_k1();
  k1_ = value;
  // @@protoc_insertion_point(field_set:libFM.Proto_fm_model.k1)
}

// required double w0 = 5 [default = 0];
 bool Proto_fm_model::has_w0() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void Proto_fm_model::set_has_w0() {
  _has_bits_[0] |= 0x00000010u;
}
 void Proto_fm_model::clear_has_w0() {
  _has_bits_[0] &= ~0x00000010u;
}
 void Proto_fm_model::clear_w0() {
  w0_ = 0;
  clear_has_w0();
}
 double Proto_fm_model::w0() const {
  // @@protoc_insertion_point(field_get:libFM.Proto_fm_model.w0)
  return w0_;
}
 void Proto_fm_model::set_w0(double value) {
  set_has_w0();
  w0_ = value;
  // @@protoc_insertion_point(field_set:libFM.Proto_fm_model.w0)
}

// required string w_str = 6;
 bool Proto_fm_model::has_w_str() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void Proto_fm_model::set_has_w_str() {
  _has_bits_[0] |= 0x00000020u;
}
 void Proto_fm_model::clear_has_w_str() {
  _has_bits_[0] &= ~0x00000020u;
}
 void Proto_fm_model::clear_w_str() {
  w_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_w_str();
}
 const ::std::string& Proto_fm_model::w_str() const {
  // @@protoc_insertion_point(field_get:libFM.Proto_fm_model.w_str)
  return w_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_fm_model::set_w_str(const ::std::string& value) {
  set_has_w_str();
  w_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:libFM.Proto_fm_model.w_str)
}
 void Proto_fm_model::set_w_str(const char* value) {
  set_has_w_str();
  w_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:libFM.Proto_fm_model.w_str)
}
 void Proto_fm_model::set_w_str(const char* value, size_t size) {
  set_has_w_str();
  w_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:libFM.Proto_fm_model.w_str)
}
 ::std::string* Proto_fm_model::mutable_w_str() {
  set_has_w_str();
  // @@protoc_insertion_point(field_mutable:libFM.Proto_fm_model.w_str)
  return w_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_fm_model::release_w_str() {
  clear_has_w_str();
  return w_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_fm_model::set_allocated_w_str(::std::string* w_str) {
  if (w_str != NULL) {
    set_has_w_str();
  } else {
    clear_has_w_str();
  }
  w_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), w_str);
  // @@protoc_insertion_point(field_set_allocated:libFM.Proto_fm_model.w_str)
}

// required string v_str = 7;
 bool Proto_fm_model::has_v_str() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void Proto_fm_model::set_has_v_str() {
  _has_bits_[0] |= 0x00000040u;
}
 void Proto_fm_model::clear_has_v_str() {
  _has_bits_[0] &= ~0x00000040u;
}
 void Proto_fm_model::clear_v_str() {
  v_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_v_str();
}
 const ::std::string& Proto_fm_model::v_str() const {
  // @@protoc_insertion_point(field_get:libFM.Proto_fm_model.v_str)
  return v_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_fm_model::set_v_str(const ::std::string& value) {
  set_has_v_str();
  v_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:libFM.Proto_fm_model.v_str)
}
 void Proto_fm_model::set_v_str(const char* value) {
  set_has_v_str();
  v_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:libFM.Proto_fm_model.v_str)
}
 void Proto_fm_model::set_v_str(const char* value, size_t size) {
  set_has_v_str();
  v_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:libFM.Proto_fm_model.v_str)
}
 ::std::string* Proto_fm_model::mutable_v_str() {
  set_has_v_str();
  // @@protoc_insertion_point(field_mutable:libFM.Proto_fm_model.v_str)
  return v_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_fm_model::release_v_str() {
  clear_has_v_str();
  return v_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_fm_model::set_allocated_v_str(::std::string* v_str) {
  if (v_str != NULL) {
    set_has_v_str();
  } else {
    clear_has_v_str();
  }
  v_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), v_str);
  // @@protoc_insertion_point(field_set_allocated:libFM.Proto_fm_model.v_str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace libFM

// @@protoc_insertion_point(global_scope)

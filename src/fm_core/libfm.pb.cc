// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: libfm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "libfm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace libFM {

namespace {

const ::google::protobuf::Descriptor* Proto_fm_model_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_fm_model_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_libfm_2eproto() {
  protobuf_AddDesc_libfm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "libfm.proto");
  GOOGLE_CHECK(file != NULL);
  Proto_fm_model_descriptor_ = file->message_type(0);
  static const int Proto_fm_model_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, num_attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, num_factors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, k0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, k1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, w0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, w_str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, v_str_),
  };
  Proto_fm_model_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_fm_model_descriptor_,
      Proto_fm_model::default_instance_,
      Proto_fm_model_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_fm_model, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_fm_model));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_libfm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_fm_model_descriptor_, &Proto_fm_model::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_libfm_2eproto() {
  delete Proto_fm_model::default_instance_;
  delete Proto_fm_model_reflection_;
}

void protobuf_AddDesc_libfm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013libfm.proto\022\005libFM\"\216\001\n\016Proto_fm_model\022"
    "\026\n\016num_attributes\030\001 \002(\r\022\023\n\013num_factors\030\002"
    " \002(\005\022\020\n\002k0\030\003 \002(\010:\004true\022\020\n\002k1\030\004 \002(\010:\004true"
    "\022\r\n\002w0\030\005 \002(\001:\0010\022\r\n\005w_str\030\006 \002(\t\022\r\n\005v_str\030"
    "\007 \002(\t", 165);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "libfm.proto", &protobuf_RegisterTypes);
  Proto_fm_model::default_instance_ = new Proto_fm_model();
  Proto_fm_model::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_libfm_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_libfm_2eproto {
  StaticDescriptorInitializer_libfm_2eproto() {
    protobuf_AddDesc_libfm_2eproto();
  }
} static_descriptor_initializer_libfm_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Proto_fm_model::kNumAttributesFieldNumber;
const int Proto_fm_model::kNumFactorsFieldNumber;
const int Proto_fm_model::kK0FieldNumber;
const int Proto_fm_model::kK1FieldNumber;
const int Proto_fm_model::kW0FieldNumber;
const int Proto_fm_model::kWStrFieldNumber;
const int Proto_fm_model::kVStrFieldNumber;
#endif  // !_MSC_VER

Proto_fm_model::Proto_fm_model()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_fm_model::InitAsDefaultInstance() {
}

Proto_fm_model::Proto_fm_model(const Proto_fm_model& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_fm_model::SharedCtor() {
  _cached_size_ = 0;
  num_attributes_ = 0u;
  num_factors_ = 0;
  k0_ = true;
  k1_ = true;
  w0_ = 0;
  w_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  v_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_fm_model::~Proto_fm_model() {
  SharedDtor();
}

void Proto_fm_model::SharedDtor() {
  if (w_str_ != &::google::protobuf::internal::kEmptyString) {
    delete w_str_;
  }
  if (v_str_ != &::google::protobuf::internal::kEmptyString) {
    delete v_str_;
  }
  if (this != default_instance_) {
  }
}

void Proto_fm_model::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_fm_model::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_fm_model_descriptor_;
}

const Proto_fm_model& Proto_fm_model::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_libfm_2eproto();
  return *default_instance_;
}

Proto_fm_model* Proto_fm_model::default_instance_ = NULL;

Proto_fm_model* Proto_fm_model::New() const {
  return new Proto_fm_model;
}

void Proto_fm_model::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    num_attributes_ = 0u;
    num_factors_ = 0;
    k0_ = true;
    k1_ = true;
    w0_ = 0;
    if (has_w_str()) {
      if (w_str_ != &::google::protobuf::internal::kEmptyString) {
        w_str_->clear();
      }
    }
    if (has_v_str()) {
      if (v_str_ != &::google::protobuf::internal::kEmptyString) {
        v_str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_fm_model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 num_attributes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_attributes_)));
          set_has_num_attributes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num_factors;
        break;
      }

      // required int32 num_factors = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num_factors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_factors_)));
          set_has_num_factors();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_k0;
        break;
      }

      // required bool k0 = 3 [default = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_k0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &k0_)));
          set_has_k0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_k1;
        break;
      }

      // required bool k1 = 4 [default = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_k1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &k1_)));
          set_has_k1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(41)) goto parse_w0;
        break;
      }

      // required double w0 = 5 [default = 0];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w0_)));
          set_has_w0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_w_str;
        break;
      }

      // required string w_str = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_w_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_w_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->w_str().data(), this->w_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_v_str;
        break;
      }

      // required string v_str = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_v_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_v_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->v_str().data(), this->v_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_fm_model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 num_attributes = 1;
  if (has_num_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num_attributes(), output);
  }

  // required int32 num_factors = 2;
  if (has_num_factors()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_factors(), output);
  }

  // required bool k0 = 3 [default = true];
  if (has_k0()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->k0(), output);
  }

  // required bool k1 = 4 [default = true];
  if (has_k1()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->k1(), output);
  }

  // required double w0 = 5 [default = 0];
  if (has_w0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->w0(), output);
  }

  // required string w_str = 6;
  if (has_w_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->w_str().data(), this->w_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->w_str(), output);
  }

  // required string v_str = 7;
  if (has_v_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->v_str().data(), this->v_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->v_str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_fm_model::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 num_attributes = 1;
  if (has_num_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num_attributes(), target);
  }

  // required int32 num_factors = 2;
  if (has_num_factors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_factors(), target);
  }

  // required bool k0 = 3 [default = true];
  if (has_k0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->k0(), target);
  }

  // required bool k1 = 4 [default = true];
  if (has_k1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->k1(), target);
  }

  // required double w0 = 5 [default = 0];
  if (has_w0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->w0(), target);
  }

  // required string w_str = 6;
  if (has_w_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->w_str().data(), this->w_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->w_str(), target);
  }

  // required string v_str = 7;
  if (has_v_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->v_str().data(), this->v_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->v_str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_fm_model::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 num_attributes = 1;
    if (has_num_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_attributes());
    }

    // required int32 num_factors = 2;
    if (has_num_factors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_factors());
    }

    // required bool k0 = 3 [default = true];
    if (has_k0()) {
      total_size += 1 + 1;
    }

    // required bool k1 = 4 [default = true];
    if (has_k1()) {
      total_size += 1 + 1;
    }

    // required double w0 = 5 [default = 0];
    if (has_w0()) {
      total_size += 1 + 8;
    }

    // required string w_str = 6;
    if (has_w_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->w_str());
    }

    // required string v_str = 7;
    if (has_v_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->v_str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_fm_model::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_fm_model* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_fm_model*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_fm_model::MergeFrom(const Proto_fm_model& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num_attributes()) {
      set_num_attributes(from.num_attributes());
    }
    if (from.has_num_factors()) {
      set_num_factors(from.num_factors());
    }
    if (from.has_k0()) {
      set_k0(from.k0());
    }
    if (from.has_k1()) {
      set_k1(from.k1());
    }
    if (from.has_w0()) {
      set_w0(from.w0());
    }
    if (from.has_w_str()) {
      set_w_str(from.w_str());
    }
    if (from.has_v_str()) {
      set_v_str(from.v_str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_fm_model::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_fm_model::CopyFrom(const Proto_fm_model& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_fm_model::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void Proto_fm_model::Swap(Proto_fm_model* other) {
  if (other != this) {
    std::swap(num_attributes_, other->num_attributes_);
    std::swap(num_factors_, other->num_factors_);
    std::swap(k0_, other->k0_);
    std::swap(k1_, other->k1_);
    std::swap(w0_, other->w0_);
    std::swap(w_str_, other->w_str_);
    std::swap(v_str_, other->v_str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_fm_model::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_fm_model_descriptor_;
  metadata.reflection = Proto_fm_model_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace libFM

// @@protoc_insertion_point(global_scope)
